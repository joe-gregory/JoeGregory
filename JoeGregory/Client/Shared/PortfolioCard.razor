@code {
    [Parameter] public string Id { get; set; }
    [Parameter] public MarkupString ProjectName { get; set; }
    [Parameter] public MarkupString ValueProposition { get; set; }
    [Parameter] public MarkupString TechStack { get; set; }
    [Parameter] public string ProjectLink { get; set; }
    [Parameter] public string GitHubRepoLink { get; set; }
    [Parameter] public string ImageOrVideoLink { get; set; }
    [Parameter] public MarkupString Description { get; set; }
    [Parameter] public bool IsVideo { get; set; }
}
@inject ISnackbar Snackbar

<MudCard Elevation="23" id="@Id" Class="portfolio-card-sizing portfolio-card">
    <MudCardHeader>
        <CardHeaderActions>
            <MudIconButton Class="header-content-wrap" Icon="@Icons.Custom.Brands.GitHub" Color="Color.Default" Size="Size.Small" Href="@GitHubRepoLink" />
        </CardHeaderActions>
        <CardHeaderContent>
            <MudText Class="header-content-wrap" Typo="Typo.h6">@ProjectName</MudText>
            <MudText Class="header-content-wrap" Typo="Typo.overline">@ValueProposition</MudText>
            <MudText Class="header-content-wrap" Typo="Typo.body2"><strong>Tech stack: </strong>@TechStack</MudText>
            <MudLink Class="header-content-wrap" Href="@ProjectLink" Underline="Underline.Always">@ProjectLink</MudLink>
        </CardHeaderContent>
        
    </MudCardHeader>
    @if (IsVideo)
    {
        <MudCardMediaVideo VideoUrl="@ImageOrVideoLink" Height="500" />
    }
    else
    {
        <CustomMudCardMedia Image="@ImageOrVideoLink" Height="500" />
    }
    <MudCardContent Class="mt-5">
        <MudExpansionPanels Elevation="20">
            <MudExpansionPanel Text="Description">@Description</MudExpansionPanel>
        </MudExpansionPanels>
    </MudCardContent>
    <MudCardActions>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Share" Color="Color.Default" OnClick="@(e => ShareContent(Id))" />
    </MudCardActions>
</MudCard>

@code {
    @inject IJSRuntime JSRuntime
    @inject NavigationManager NavigationManager

    public async Task ShareContent(string cardId)
    {
        string url = $"{NavigationManager.Uri}#{cardId}";
        await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", url);
        Snackbar.Configuration.SnackbarVariant = Variant.Filled;
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
        Snackbar.Configuration.ClearAfterNavigation = true;
        Snackbar.Add("Information copied to clipboard!", Severity.Info);
    }
}